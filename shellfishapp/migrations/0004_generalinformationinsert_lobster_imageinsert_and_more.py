# Generated by Django 4.0.3 on 2023-04-04 05:08

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('shellfishapp', '0003_alter_crab_imageinsert_image1_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='GeneralInformationInsert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ShrimpPrawnID', models.IntegerField()),
                ('ScientificName', models.CharField(max_length=500)),
                ('Environment', models.CharField(blank=True, max_length=500)),
                ('CommonName', models.CharField(blank=True, max_length=500)),
                ('ConservationStatus', models.CharField(blank=True, max_length=500)),
                ('PopulationStatus', models.CharField(blank=True, max_length=500)),
                ('DistributionInIndia', models.TextField(blank=True, max_length=1000)),
                ('DistributionOutsideOfIndia', models.TextField(blank=True, max_length=1000)),
            ],
            options={
                'db_table': 'generalinformation',
            },
        ),
        migrations.CreateModel(
            name='Lobster_ImageInsert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('LobsterID', models.IntegerField()),
                ('ScientificName', models.CharField(max_length=500)),
                ('Image1', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('Image2', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('Image3', models.ImageField(blank=True, null=True, upload_to='images/')),
            ],
            options={
                'db_table': 'lobster_image',
            },
        ),
        migrations.CreateModel(
            name='Lobster_MorphologicalInsert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('LobsterID', models.IntegerField()),
                ('ScientificName', models.CharField(max_length=500)),
                ('ShortDescription', models.TextField(blank=True, max_length=2000, null=True)),
                ('BodyNature', models.TextField(blank=True, max_length=2000, null=True)),
                ('Eyes', models.CharField(blank=True, max_length=500, null=True)),
                ('CarapaceNature', models.CharField(blank=True, max_length=500, null=True)),
                ('AntennuleSegments', models.CharField(blank=True, max_length=500, null=True)),
                ('AntennalPlate', models.CharField(blank=True, max_length=500, null=True)),
                ('AbdominalSegments', models.CharField(blank=True, max_length=500, null=True)),
                ('NatureofLegs', models.CharField(blank=True, max_length=500, null=True)),
                ('TelsonNature', models.CharField(blank=True, max_length=500, null=True)),
                ('SexualDimorphism', models.CharField(blank=True, max_length=500, null=True)),
                ('HabitatAndEcology', models.CharField(blank=True, max_length=500, null=True)),
                ('Biology', models.CharField(blank=True, max_length=500, null=True)),
                ('SpecificRemarks', models.CharField(blank=True, max_length=500, null=True)),
                ('Colouration', models.TextField(blank=True, max_length=2000, null=True)),
            ],
            options={
                'db_table': 'lobster_morphological',
            },
        ),
        migrations.CreateModel(
            name='Lobster_OccurrenceInsert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('LobsterID', models.IntegerField()),
                ('ScientificName', models.CharField(max_length=500)),
                ('Locality', models.CharField(blank=True, max_length=500, null=True)),
                ('State', models.CharField(blank=True, max_length=500, null=True)),
                ('Latitude', models.CharField(blank=True, max_length=500, null=True)),
                ('Longitude', models.CharField(blank=True, max_length=500, null=True)),
                ('Reference', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'db_table': 'lobster_occurrence',
            },
        ),
        migrations.CreateModel(
            name='Lobster_SynonymsInsert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('LobsterID', models.IntegerField()),
                ('ScientificName', models.CharField(max_length=500)),
                ('Synonym', models.CharField(blank=True, max_length=500, null=True)),
                ('Synonymy', models.CharField(blank=True, max_length=500, null=True)),
                ('Status', models.CharField(blank=True, max_length=500, null=True)),
                ('Valid', models.CharField(blank=True, max_length=500, null=True)),
                ('Author', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'db_table': 'lobster_synonyms',
            },
        ),
       
        migrations.CreateModel(
            name='Lobster_TypeSpecimenInsert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('LobsterID', models.IntegerField()),
                ('ScientificName', models.CharField(max_length=500)),
                ('TypeSpecimen', models.CharField(blank=True, max_length=500, null=True)),
                ('Geo_Unit_Locality', models.CharField(blank=True, max_length=500, null=True)),
                ('Descriptor', models.CharField(blank=True, max_length=500, null=True)),
                ('SpecimenCatalogueNumber', models.CharField(blank=True, max_length=500, null=True)),
                ('Author', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'db_table': 'lobster_typespecimen',
            },
        ),
        migrations.CreateModel(
            name='TypeLocalityInsert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ShrimpPrawnID', models.IntegerField()),
                ('ScientificName', models.CharField(max_length=500)),
                ('GBIFID', models.CharField(blank=True, max_length=500)),
                ('Family', models.CharField(blank=True, max_length=500)),
                ('Genus', models.CharField(blank=True, max_length=500)),
                ('TaxonRank', models.CharField(blank=True, max_length=1000)),
                ('CountryCode', models.CharField(blank=True, max_length=500)),
                ('Locality', models.CharField(blank=True, max_length=500)),
                ('StateProvince', models.CharField(blank=True, max_length=500)),
                ('OccurrenceStatus', models.CharField(blank=True, max_length=500)),
                ('IndividualCount', models.CharField(blank=True, max_length=500)),
                ('Latitude', models.CharField(blank=True, max_length=500)),
                ('Longitude', models.CharField(blank=True, max_length=500)),
                ('RecordBasis', models.CharField(blank=True, max_length=500)),
                ('InstitutionCode', models.CharField(blank=True, max_length=500)),
                ('CatalogueNumber', models.CharField(blank=True, max_length=500)),
                ('IdentifiedBy', models.CharField(blank=True, max_length=500)),
                ('License', models.CharField(blank=True, max_length=500)),
                ('TypeStatus', models.CharField(blank=True, max_length=500)),
                ('EstablishmentMeans', models.CharField(blank=True, max_length=500)),
                ('TypeSpecimenStatus', models.CharField(blank=True, max_length=500)),
                ('TypeSpecimenRepository', models.CharField(blank=True, max_length=1000)),
                ('TypeLocality', models.CharField(blank=True, max_length=500)),
                ('Author', models.CharField(blank=True, max_length=500)),
                ('TypeSpecimenCatalogueNumber', models.CharField(blank=True, max_length=500)),
                ('URL', models.CharField(blank=True, max_length=500)),
                ('Source', models.CharField(blank=True, max_length=500)),
            ],
            options={
                'db_table': 'typelocality',
            },
        ),
    ]
